===============
 Dependencies:
===============

You will need at least one of these (headers and libraries):
   alsa-lib
   oss
   libao
   portaudio
   openal
   muroar
   pulseaudio

==========================
 To compile (Unix-like):
==========================

Custom configure script, but will recognize some autotool-isms like --prefix, etc.
It will try to detect backend support.
To explicitly disable support, you can add these

--disable-alsa
--disable-oss
--disable-libao
--disable-portaudio
--disable-muroar
--disable-openal
--disable-pulse

You can refer to which modules you can (un)install by checking ./configure --help

$ ./configure
$ make
# make install

Note: On BSD-systems, you'll have to use gmake.

=======================
 To compile (Cygwin):
=======================

Windows is supported via:
   libao
   portaudio

The build process in cygwin is very similar. You will however need
to download, compile and install the latest portaudio and/or libao library 
in the cygwin environment, if this isn't provided by cygwin itself. 

Portaudio: http://www.portaudio.com/trac/wiki/TutorialDir/Compile/WindowsMinGW
LibAO: http://www.xiph.org/ao/ - Grab latest source and build as you would expect.

Then you could build with:

$ ./configure
$ make
$ make install

and copy over rsd.exe and rsdplay.exe to where they might fit. To distribute
the applications you will need to include:

cyggcc_s-1.dll
cygportaudio-2.dll / cygao-2.dll
cygwin1.dll

Note: The cygwin build is considered deprecated, and has some unresolved bugs related to 100% CPU usage. 

======================
 To compile (Win32):
======================

A native win32 port is included in the source tree.

To build, make sure that the toolchain can be found in your PATH.
Also, copy pthreadGC2.dll found in the win32-pthread package into src/win32/bin/.
To use rsd.exe, you will need to install the OpenAL runtime which is not included in the distribution due to size.

To compile, type: mingw32-make mingw32

Binaries will be found in src/win32/bin.

